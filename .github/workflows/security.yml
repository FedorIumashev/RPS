name: Security Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  security-events: write
  contents: read
  pull-requests: read

jobs:
  security_scan:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Checkout репозитория
      - name: Checkout repository
        uses: actions/checkout@v4

      # Шаг 2: Установить Python и необходимые зависимости
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      # Шаг 3: Установить зависимости для проверки безопасности
      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install --no-cache-dir bandit pip-audit trivy

      # Шаг 4: Запуск Bandit для анализа кода (SAST)
      - name: Run Bandit (SAST)
        run: |
          bandit -r src/ -f json -o bandit-report.json || true

      # Шаг 5: Запуск Pip Audit для проверки зависимостей
      - name: Run Pip Audit (Dependency Scan)
        run: |
          pip-audit --format=json --output=pip-audit-report.json || true

      # Шаг 6: Запуск Trivy для проверки уязвимостей
      - name: Run Trivy on dependencies
        run: |
          trivy fs --scanners vuln,config -f json -o trivy-report.json . || true

      # Шаг 7: Запуск Gitleaks для поиска секретных ключей
      - name: Run Gitleaks (Secrets Scan) via Docker
        run: |
          docker run --rm -v $(pwd):/src ghcr.io/gitleaks/gitleaks:v8.24.2 detect -s /src -v --report-format=json --report-path=/src/gitleaks-report.json || true

      # Шаг 8: Проверка существования отчетов (для отладки)
      - name: List generated files
        run: |
          ls -lah

      # Шаг 9: Загружаем отчеты как артефакты
      - name: Upload reports as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
            pip-audit-report.json
            trivy-report.json
            gitleaks-report.json

      # Шаг 10: Загружаем отчеты в GitHub Security Tab (SARIF формат)
      - name: Upload Bandit report to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bandit-report.json

      - name: Upload Pip Audit report to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pip-audit-report.json

      - name: Upload Trivy report to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-report.json

      - name: Upload Gitleaks report to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks-report.json
